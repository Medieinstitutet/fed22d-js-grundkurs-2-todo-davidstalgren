(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const d of a.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function c(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerpolicy&&(a.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?a.credentials="include":o.crossorigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(o){if(o.ep)return;o.ep=!0;const a=c(o);fetch(o.href,a)}})();const p=document.querySelector("#headerDate"),y=document.querySelector("#headerWeek"),s=new Date,g=s.getDate(),D=s.getMonth()+1,L=s.getFullYear(),k=v(s),b=g+"/"+D+" - "+L;function v(e){let t=new Date(e.getFullYear(),0,1),c=Math.floor((e-t)/(24*60*60*1e3));return Math.ceil(c/7)}p.innerHTML=b;y.innerHTML="Week "+k;const S=document.querySelector(".todo-form"),f=document.querySelector(".todo-input"),m=document.querySelector(".todo-input-date"),h=document.querySelector(".todo-items");let i=document.querySelectorAll(".item"),r=[];S.addEventListener("submit",w);function w(e){if(e.preventDefault(),m.value!==""&&f.value!==""){const t={id:Date.now(),name:f.value,completed:!1,dueDate:m.value};r.push(t),l(r)}else alert("Make sure to type a Todo and also choose a due date and category!")}function I(){i=document.querySelectorAll(".item"),i.forEach(e=>{e.querySelector(".delete-button").addEventListener("click",N)}),i.forEach(e=>{e.querySelector(".checkbox").addEventListener("click",O)})}function u(e){h.innerHTML="",e.forEach(function(t){const c=t.completed?"checked":null,n=document.createElement("li");n.setAttribute("class","item"),n.setAttribute("data-key",t.id);const o=new Date(t.dueDate),a=new Date(s.getFullYear(),s.getMonth(),s.getDate()+5);o<s?n.classList.add("overdue"):o<=a&&n.classList.add("justintime"),t.completed===!0&&(n.classList.add("checked"),n.classList.remove("overdue"),n.classList.remove("justintime")),n.innerHTML=`
        <i class="fa-solid fa-house-user"></i>${t.name}
          <div class="icons-duedate">
            <div>
              <input class="checkbox" type="checkbox"  data-id="${t.id}" ${c}>
              <button class="delete-button" data-id="${t.id}"><i class="fa-solid fa-trash-can trashcan"></i></button>
            </div>
            <span>Due date ${t.dueDate}</span>
          </div>
      `,h.append(n)}),I()}function l(e){localStorage.setItem("todos",JSON.stringify(e)),u(e)}function T(){const e=localStorage.getItem("todos");e&&(r=JSON.parse(e),u(r))}function q(){r.sort((e,t)=>e.dueDate<t.dueDate?-1:e.dueDate>t.dueDate?1:0)}function x(){r.sort((e,t)=>e.id<t.id?-1:e.id>t.id?1:0)}function M(){r.sort((e,t)=>e.name.toLowerCase()<t.name.toLowerCase()?-1:e.name.toLowerCase()>t.name.toLowerCase()?1:0)}function E(){const e=sortOptions.value;e==="Name"?M():e==="Date added"?x():e==="Due date"&&q(),u(r)}sortOptions.addEventListener("change",E);function N(e){const t=e.currentTarget.dataset.id,c=r.findIndex(n=>n.id==t);r.splice(c,1),l(r)}function O(e){const t=e.currentTarget.dataset.id,c=r.findIndex(n=>n.id==t);r[c].completed=!r[c].completed,l(r)}T();
